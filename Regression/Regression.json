{
  // ########################################
  // General
  // ########################################

  "EasyMode_On": "{{i18n:General.EasyMode.On}}",
  "EasyMode_Off": "{{i18n:General.EasyMode.Off}}",

  // ########################################
  // Letter from Jodi you get at the 
  // start of a new game
  // ########################################

  "Jodi_Initial_Letter": [ "{{i18n:Jodi.Initial_Letter.1}}" ],

  // ########################################
  // Food and water states
  // ########################################

  "Food_Low": [
    "{{i18n:Food.Low.1}}",
    "{{i18n:Food.Low.2}}",
    "{{i18n:Food.Low.3}}",
    "{{i18n:Food.Low.4}}",
    "{{i18n:Food.Low.5}}"
  ],
  "Food_None": [
    "{{i18n:Food.None.1}}",
    "{{i18n:Food.None.2}}",
    "{{i18n:Food.None.3}}"
  ],
  "Water_Low": [
    "{{i18n:Water.Low.1}}",
    "{{i18n:Water.Low.2}}",
    "{{i18n:Water.Low.3}}",
    "{{i18n:Water.Low.4}}"
  ],
  "Water_None": [
    "{{i18n:Water.None.1}}",
    "{{i18n:Water.None.2}}",
    "{{i18n:Water.None.3}}"
  ],
  "Drink_Water_Source": [
    "{{i18n:Drink.Water-Source.1}}"
  ],

  // ########################################
  // Bladder states
  // ########################################

  "Bladder_Green": [
    "{{i18n:Bladder.Green.1}}",
    "{{i18n:Bladder.Green.2}}"
  ],
  "Bladder_Yellow": [
    "{{i18n:Bladder.Yellow.1}}",
    "{{i18n:Bladder.Yellow.2}}",
    "{{i18n:Bladder.Yellow.3}}",
    "{{i18n:Bladder.Yellow.4}}"
  ],
  "Bladder_Orange": [
    "{{i18n:Bladder.Orange.1}}",
    "{{i18n:Bladder.Orange.2}}",
    "{{i18n:Bladder.Orange.3}}",
    "{{i18n:Bladder.Orange.4}}"
  ],
  "Bladder_Red": [
    "{{i18n:Bladder.Red.1}}",
    "{{i18n:Bladder.Red.2}}"
  ],
  "Bladder_Leak": [
    "{{i18n:Bladder.Leak.1}}",
    "{{i18n:Bladder.Leak.2}}",
    "{{i18n:Bladder.Leak.3}}",
    "{{i18n:Bladder.Leak.4}}",
    "{{i18n:Bladder.Leak.5}}"
  ],

  // ########################################
  // Bowel states
  // ########################################

  "Bowels_Green": [
    "{{i18n:Bowels.Green.1}}",
    "{{i18n:Bowels.Green.2}}"
  ],
  "Bowels_Yellow": [
    "{{i18n:Bowels.Yellow.1}}",
    "{{i18n:Bowels.Yellow.2}}",
    "{{i18n:Bowels.Yellow.3}}",
    "{{i18n:Bowels.Yellow.4}}"
  ],
  "Bowels_Orange": [
    "{{i18n:Bowels.Orange.1}}",
    "{{i18n:Bowels.Orange.2}}",
    "{{i18n:Bowels.Orange.3}}"
  ],
  "Bowels_Red": [
    "{{i18n:Bowels.Red.1}}",
    "{{i18n:Bowels.Red.2}}"
  ],
  "Bowels_Leak": [
    "{{i18n:Bowels.Leak.1}}",
    "{{i18n:Bowels.Leak.2}}",
    "{{i18n:Bowels.Leak.3}}",
    "{{i18n:Bowels.Leak.4}}"
  ],

  // ########################################
  // Bladder and bowel continence states
  // ########################################

  "Bladder_Continence_Green": [ "Bladder.Continence.Green.1}}" ],
  "Bladder_Continence_Yellow": [ "Bladder.Continence.Yellow.1}}" ],
  "Bladder_Continence_Orange": [ "Bladder.Continence.Orange.1}}" ],
  "Bladder_Continence_Red": [ "Bladder.Continence.Red.1}}" ],
  "Bladder_Continence_Min": [ "Bladder.Continence.Min.1}}" ],
  "Bowel_Continence_Green": [ "Bowel.Continence.Green.1}}" ],
  "Bowel_Continence_Yellow": [ "Bowel.Continence.Yellow.1}}" ],
  "Bowel_Continence_Orange": [ "Bowel.Continence.Orange.1}}" ],
  "Bowel_Continence_Red": [ "Bowel.Continence.Red.1}}" ],
  "Bowel_Continence_Min": [ "Bowel.Continence.Min.1}}" ],

  // ########################################
  // Pee and poop messages
  // ########################################

  "Pee_Voluntary": [
    "{{i18n:Pee.Ground.1}}",
    "{{i18n:Pee.Ground.2}}",
    "{{i18n:Pee.Ground.3}}",
    "{{i18n:Pee.Ground.4}}",
    "{{i18n:Pee.Ground.5}}",
    "{{i18n:Pee.Ground.6}}",
    "{{i18n:Pee.Ground.7}}"
  ],
  "Poop_Voluntary": [
    "{{i18n:Poop.Ground.1}}",
    "{{i18n:Poop.Ground.2}}",
    "{{i18n:Poop.Ground.3}}",
    "{{i18n:Poop.Ground.4}}",
    "{{i18n:Poop.Ground.5}}"
  ],
  "Pee_Toilet": [
    "18n:Pee.Toilet.1}}",
    "18n:Pee.Toilet.2}}",
    "18n:Pee.Toilet.3}}",
    "18n:Pee.Toilet.4}}",
    "18n:Pee.Toilet.5}}",
    "18n:Pee.Toilet.6}}",
    "18n:Pee.Toilet.7}}",
    "18n:Pee.Toilet.8}}"
  ],
  "Poop_Toilet": [
    "{{i18n:Poop.Toilet.1}}",
    "{{i18n:Poop.Toilet.2}}",
    "{{i18n:Poop.Toilet.3}}",
    "{{i18n:Poop.Toilet.4}}",
    "{{i18n:Poop.Toilet.5}}",
    "{{i18n:Poop.Toilet.6}}",
    "{{i18n:Poop.Toilet.7}}",
    "{{i18n:Poop.Toilet.8}}"
  ],
  "Pee_Toilet_Attempt": [
    "{{i18n:Pee.Toilet.Attempt.1}}",
    "{{i18n:Pee.Toilet.Attempt.2}}"
  ],
  "Poop_Toilet_Attempt": [
    "{{i18n:Poop.Toilet.Attempt.1}}",
    "{{i18n:Poop.Toilet.Attempt.2}}",
    "{{i18n:Poop.Toilet.Attempt.3}}"
  ],
  "Wet_Voluntary": [
    "{{i18n:Pee.Underwear.1}}",
    "{{i18n:Pee.Underwear.2}}",
    "{{i18n:Pee.Underwear.3}}",
    "{{i18n:Pee.Underwear.3}}"
  ],
  "Mess_Voluntary": [
    "{{i18n:Poop.Underwear.1}}",
    "{{i18n:Poop.Underwear.2}}",
    "{{i18n:Poop.Underwear.3}}"
  ],
  "Pee_Attempt": [
    "{{i18n:Pee.Attempt.1}}",
    "{{i18n:Pee.Attempt.2}}"
  ],
  "Poop_Attempt": [
    "{{i18n:Poop.Attempt.1}}",
    "{{i18n:Poop.Attempt.2}}"
  ],
  "Wet_Attempt": [
    "{{i18n:Pee.Underwear.Attempt.1}}",
    "{{i18n:Pee.Underwear.Attempt.2}}"
  ],
  "Mess_Attempt": [
    "{{i18n:Poop.Underwear.Attempt.1}}",
    "{{i18n:Poop.Underwear.Attempt.2}}"
  ],

  // ########################################
  // underwear still soiled and changeing 
  // ########################################

  // Underwear still soiled

  "Still_Soiled": [
    "{{i18n:Underwear.Still_Soiled.1}}",
    "{{i18n:Underwear.Still_Soiled.2}}",
    "{{i18n:Underwear.Still_Soiled.3}}",
    "{{i18n:Underwear.Still_Soiled.4}}",
    "{{i18n:Underwear.Still_Soiled.5}}",
    "{{i18n:Underwear.Still_Soiled.6}}",
    "{{i18n:Underwear.Still_Soiled.7}}",
    "{{i18n:Underwear.Still_Soiled.8}}",
    "{{i18n:Underwear.Still_Soiled.9}}",
    "{{i18n:Underwear.Still_Soiled.10}}"
  ],

  // Underwear should be changed

  "Should_Change": [
    "{{i18n:Underwear.Should_Change.1}}",
    "{{i18n:Underwear.Should_Change.2}}",
    "{{i18n:Underwear.Should_Change.3}}"
  ],

  // ########################################
  // Changeing
  // ########################################

  // Underwear cant be removed

  "Cant_Remove": [
    "{{i18n:Change.Cant_Remove.1}}"
  ],

  // Changed underwear by yourself

  "Change_Underwear": [
    "{{i18n:Change.Underwear.Yourself.1}}"
    //***"You take off your soiled <OLD_UNDERWEAR_DESC> and put on $UNDERWEAR_PREFIX$ clean $UNDERWEAR_NAME$."
  ],

  // Changed underwear and pants by yourself

  "Change_Underwear_Pants": [
    "{{i18n:Change.Underwear_Pants.Yourself.1}}"
  ],

  // Changed underwear by npc

  "Change_Underwear_by_Npc": [
    "{{i18n:Change.Underwear.Npc.1}}"
  ],

  // Changed underwear and pants by npc

  "Change_Underwear_Pants_by_Npc": [
    "{{i18n:Change.Underwear_Pants.Npc.1}}"
  ],

  // Underwear was destroyed by changing by yourself

  "Change_Destroyed": [
    "{{i18n:Change.Underwear.Destroyed.Player.1}}",
    "{{i18n:Change.Underwear.Destroyed.Player.2}}"
  ],

  // Underwear of npc was destroyed by changing

  "Change_Other_Destroyed": [
    "{{i18n:Change.Underwear.Destroyed.Npc.1}}"
  ],

  // Underwear was destroyed by changing by npc

  "Getting_Changed_Destroyed": [
    "{{i18n:Change.Underwear.Destroyed.By_Npc.1}}"
  ],

  // You also need to change your pants because they are messy

  "Change_Requires_Pants": [
    "{{i18n:Change.Require.Pants.1}}"
  ],

  // You have to be at home to change your pants

  "Change_Requires_Home": [
    "{{i18n:Change.Require.Home.1}}"
  ],

  // Changed your pants at home by yourself

  "Change_At_Home": [
    "{{i18n:Change.Pants.Yourself.Home.1}}"
  ],

  // Peek inside your waistband to check your underwear
  // text will be conpleatet by script with
  // with the state of underwear and its name

  "PeekWaistband": [
    "{{i18n:Peek.Waistband.1}}"
  ],

  // ########################################
  // Dialogs for changeing 
  // ########################################

  // Dialoge for getting change by npc

  "Diaper_Change_Dialog": [
    "#$q dirty_change_yes_$NPC_NAME$/dirty_change_no_$NPC_NAME$ Diaper_Change_Followup#{{i18n:Change.Dialog.Question.1}}#$r dirty_change_yes_$NPC_NAME$ 1 Diaper_Change_Accept#{{i18n:Change.Dialog.Question.1.Answer_Yes.1}}#$r dirty_change_yes_$NPC_NAME$ 1 Diaper_Change_Accept#{{i18n:Change.Dialog.Question.1.Answer_Yes.2}}#$r dirty_change_no_$NPC_NAME$ -1 Diaper_Change_Refuse#{{i18n:Change.Dialog.Question.1.Answer_No.1}}#$r dirty_change_no_$NPC_NAME$ 0 Diaper_Change_Refuse#{{i18n:Change.Dialog.Question.1.Answer_No.2}}"
  ],

  // Dialoge for changing other npc

  "Change_Other_Dialog": [
    "#$q change_other_yes/change_other_no Change_Diaper_Followup#{{i18n:Change_Other.Dialog.Question.1}}",
    "#$q change_other_yes/change_other_no Change_Diaper_Followup#{{i18n:Change_Other.Dialog.Question.2}}"
  ],

  // ########################################
  // Accidents
  // ########################################

  "Wet_Accident": [
    "{{i18n:Pee.Accident.1}}",
    "{{i18n:Pee.Accident.2}}",
    "{{i18n:Pee.Accident.3}}",
    "{{i18n:Pee.Accident.4}}",
    "{{i18n:Pee.Accident.5}}",
    "{{i18n:Pee.Accident.6}}",
    "{{i18n:Pee.Accident.7}}",
    "{{i18n:Pee.Accident.8}}",
    "{{i18n:Pee.Accident.9}}",
    "{{i18n:Pee.Accident.10}}",
    "{{i18n:Pee.Accident.11}}",
    "{{i18n:Pee.Accident.12}}",
    "{{i18n:Pee.Accident.13}}",
    "{{i18n:Pee.Accident.14}}",
    "{{i18n:Pee.Accident.15}}",
    "{{i18n:Pee.Accident.16}}",
    "{{i18n:Pee.Accident.17}}"
  ],
  "Mess_Accident": [
    "{{i18n:Poop.Accident.1}}",
    "{{i18n:Poop.Accident.2}}",
    "{{i18n:Poop.Accident.3}}",
    "{{i18n:Poop.Accident.4}}",
    "{{i18n:Poop.Accident.5}}",
    "{{i18n:Poop.Accident.6}}",
    "{{i18n:Poop.Accident.7}}",
    "{{i18n:Poop.Accident.8}}",
    "{{i18n:Poop.Accident.9}}",
    "{{i18n:Poop.Accident.10}}",
    "{{i18n:Poop.Accident.11}}",
    "{{i18n:Poop.Accident.12}}",
    "{{i18n:Poop.Accident.13}}",
    "{{i18n:Poop.Accident.14}}",
    "{{i18n:Poop.Accident.15}}",
    "{{i18n:Poop.Accident.16}}",
    "{{i18n:Poop.Accident.17}}",
    "{{i18n:Poop.Accident.18}}"
  ],

  // ########################################
  // what happend over night
  // ########################################

  "Night": {

    // you go to toilett

    "Toilet_Night": [
      "{{i18n:Night.Toilett.1}}",
      "{{i18n:Night.Toilett.2}}",
      "{{i18n:Night.Toilett.3}}"
    ],

    // you sleep the whole night

    "Sleep_All_Night": [
      "{{i18n:Night.Sleep.1}}",
      "{{i18n:Night.Sleep.2}}",
      "{{i18n:Night.Sleep.3}}",
      "{{i18n:Night.Sleep.4}}"
    ],

    // you had an accident at night

    "Accident_At_Night": [
      "{{i18n:Night.Accident.1}}",
      "{{i18n:Night.Accident.2}}"
    ],

    // you can´t remove your underwear at night

    "Underwear_Stuck": [
      "{{i18n:Night.Underwear_Stuck.1}}",
      "{{i18n:Night.Underwear_Stuck.2}}"
    ]
  },

  // ########################################
  // State of your underwear and bed
  // after you woke up
  // ########################################

  // state of your underwear after you woke up

  "Wake_Up_Underwear_State": [
    "{{i18n:Woke_Up.Underwear.1}}"
  ],

  "Wet_Bed": [
    "{{i18n:Woke_Up.Bed.Wet.1}}",
    "{{i18n:Woke_Up.Bed.Wet.2}}",
    "{{i18n:Woke_Up.Bed.Wet.3}}",
    "{{i18n:Woke_Up.Bed.Wet.4}}",
    "{{i18n:Woke_Up.Bed.Wet.5}}",
    "{{i18n:Woke_Up.Bed.Wet.6}}"
  ],
  "Messed_Bed": [
    "{{i18n:Woke_Up.Bed.Messed.1}}",
    "{{i18n:Woke_Up.Bed.Messed.2}}",
    "{{i18n:Woke_Up.Bed.Messed.3}}",
    "{{i18n:Woke_Up.Bed.Messed.4}}",
    "{{i18n:Woke_Up.Bed.Messed.5}}",
    "{{i18n:Woke_Up.Bed.Messed.6}}",
    "{{i18n:Woke_Up.Bed.Messed.7}}"
  ],

  // ########################################
  // Washing bed and underwear
  // ########################################


  "Washing_Bedding": [
    "{{i18n:Wash.Bedding.1}}"
  ],
  "Spot_Washing_Bedding": [
    "{{i18n:Wash.Bedding.Spot.1}}"
  ],
  "Washing_Underwear": [
    "{{i18n:Wash.Underwear.1}}"
  ],
  "Overwashed_Underwear": [
    "{{i18n:Wash.Underwear.Overwash.1}}"
  ],
  "Bedding_Still_Wet": [
    "Your bedding won't be dry until $BEDDING_DRYTIME$!"
  ],

  // ########################################
  // Pee and poop overflow
  // You peed / pooped too much and now
  // its running in your pants
  // ########################################

  "Pee_Overflow": [
    "{{i18n:Pee.Overflow.1}}",
    "{{i18n:Pee.Overflow.2}}",
    "{{i18n:Pee.Overflow.3}}",
    "{{i18n:Pee.Overflow.4}}",
    "{{i18n:Pee.Overflow.5}}",
    "{{i18n:Pee.Overflow.6}}"
  ],
  "Poop_Overflow": [
    "{{i18n:Poop.Overflow.1}}",
    "{{i18n:Poop.Overflow.2}}",
    "{{i18n:Poop.Overflow.3}}",
    "{{i18n:Poop.Overflow.4}}",
    "{{i18n:Poop.Overflow.5}}",
    "{{i18n:Poop.Overflow.6}}"
  ],

  // ########################################
  // Potty options for nps`s
  // ########################################
  /*
      fullnessmax:            (optional) maximum capacity for npc´s bladder and bowel in ml. If not set, use standard pee = 700 ml, poop = 1000 ml

        pee:                    maximum capacity for npc´s bladder in ml

        poop:                   maximum capacity for npc´s bowel in ml

      potty_chance:           (optional) chance for npc´s to go on toilett. If not set, use standard 100 percent

        pee:                    chance for npc´s to make pee in toilett in percent

        poop:                   chance for npc´s to make poop in toilett in percent

      min_heart_level:        (optional) minimum heart level to npc befor potty system start working. For example: You need to know a npc a little bit better, befor you notice, they using there underwear.

      questions_answered:     (optional) the response id´s of questions, that had to be answered, befor potty system start working. For example: A Npc tells you there problems about potty using or incontinence.

      if "min_heart_level" and "questions_answered" are configured, only one option has to be true. The Options are OR combined

  */
  "Villager_Potty_Options": {

    // Vincent

    "vincent": {
      "fullnessmax": {
        "pee": 400,
        "poop": 900
      },
      "potty_chance": {
        "pee": 0,
        "poop": 0
      }
    },

    // Jas

    "jas": {
      "fullnessmax": {
        "pee": 400,
        "poop": 800
      },
      "potty_chance": {
        "pee": 30,
        "poop": 45
      }
    },

    // Sam

    "sam": {
      "fullnessmax": {
        "pee": 550,
        "poop": 800
      },
      "potty_chance": {
        "pee": 20,
        "poop": 60
      }
    },

    // Abigail

    "abigail": {
      "potty_chance": {
        "pee": 30,
        "poop": 80
      },
      "min_heart_level": 4
    },

    // Maru

    "maru": {
      "potty_chance": {
        "pee": 50,
        "poop": 90
      },
      "min_heart_level": 4
    },

    // Emily

    "emily": {
      "potty_chance": {
        "pee": 50,
        "poop": 90
      },
      "min_heart_level": 4
    },

    // Haley

    "haley": {
      "potty_chance": {
        "pee": 50,
        "poop": 90
      },
      "min_heart_level": 4
    },

    // Leah

    "leah": {
      "potty_chance": {
        "pee": 50,
        "poop": 90
      },
      "min_heart_level": 4
    },

    // Penny

    "penny": {
      "potty_chance": {
        "pee": 50,
        "poop": 90
      },
      "min_heart_level": 4,
      "questions_answered": [
        "penny_potty_trouble"
      ]
    }
  },

  // ########################################
  // Potty dialogs for nps`s
  // ########################################
  /*

      Pee:      npc pee
      Poop:     npc poop

      Fail:     npc fail to hold pee / poop  
      Success:  npc success to hold pee / poop 

      Pre:      message befor animation
      Post:     message after animation

      Exemple ID:

      Pee.Fail.Pre    -> Message that will be shown, befor start of animation, if the npc faild to hold there pee -> befor there start to wet there underwear
      Poop.Fail.Post  -> Message that will be shown, after the animation, if the npc faild to hold there poop -> after there mess there underwear

  */

  "Villager_Potty_Dialogs": {

    // Vincent

    "vincent": {
      "pee": {
        "pre": {
          "success": [
            // vincent never success. All will go in his underwear
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Pre.2}}",
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Pre.3}}",
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Pre.4}}"
          ]
        },
        "post": {
          "success": [
            // vincent never success. All will go in his underwear
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Post.3}}",
            "{{i18n:Potty_Dialogs.Vincent.Pee.Fail.Post.4}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success:": [
            // vincent never success. All will go in his underwear
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Pre.2}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Pre.3}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Pre.4}}"
          ]
        },
        "post": {
          "success": [
            // vincent never success. All will go in his underwear
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.3}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.4}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.5}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.6}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.7}}",
            "{{i18n:Potty_Dialogs.Vincent.Poop.Fail.Post.8}}"
          ]
        }
      }
    },

    // Jas

    "jas": {
      "pee": {
        "pre": {
          "success": [
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Pre.1}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Pre.2}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Pre.3}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Pre.4}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Pre.5}}"
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Pre.2}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Pre.3}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Pre.4}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Pre.5}}"
          ]
        },
        "post": {
          "success": [
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Post.1}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Post.2}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Post.3}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Success.Post.4}}"
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.3}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.4}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.5}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.6}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.7}}",
            "{{i18n:Potty_Dialogs.Jas.Pee.Fail.Post.8}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            "{{i18n:Potty_Dialogs.Jas.Poop.Success.Pre.1}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Success.Pre.2}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Success.Pre.3}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Success.Pre.4}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Success.Pre.5}}"
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Pre.2}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Pre.3}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Pre.4}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Pre.5}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Pre.6}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Pre.7}}"
          ]
        },
        "post": {
          "success": [
            "{{i18n:Potty_Dialogs.Jas.Poop.Success.Post.1}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Success.Post.2}}"
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.3}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.4}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.5}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.6}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.7}}",
            "{{i18n:Potty_Dialogs.Jas.Poop.Fail.Post.8}}"
          ]
        }
      }
    },

    // Sam

    "sam": {
      "pee": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Sam.Pee.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Sam.Pee.Fail.Pre.2}}",
            "{{i18n:Potty_Dialogs.Sam.Pee.Fail.Pre.3}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Sam.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Sam.Pee.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Sam.Pee.Fail.Post.3}}",
            "{{i18n:Potty_Dialogs.Sam.Pee.Fail.Post.4}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Pre.2}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Post.3}}",
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Post.4}}",
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Post.5}}",
            "{{i18n:Potty_Dialogs.Sam.Poop.Fail.Post.6}}"
          ]
        }
      }
    },

    // Abigail

    "abigail": {
      "pee": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Abigail.Pee.Fail.Pre.1}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Abigail.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Abigail.Pee.Fail.Post.2}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Abigail.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Abigail.Poop.Fail.Pre.2}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Abigail.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Abigail.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Abigail.Poop.Fail.Post.3}}"
          ]
        }
      }
    },

    // Maru

    "maru": {
      "pee": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Maru.Pee.Fail.Pre.1}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Maru.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Maru.Pee.Fail.Post.2}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Maru.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Maru.Poop.Fail.Pre.2}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Maru.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Maru.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Maru.Poop.Fail.Post.3}}"
          ]
        }
      }
    },

    // Emily

    "emily": {
      "pee": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Emily.Pee.Fail.Pre.1}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Emily.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Emily.Pee.Fail.Post.2}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Emily.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Emily.Poop.Fail.Pre.2}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Emily.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Emily.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Emily.Poop.Fail.Post.3}}"
          ]
        }
      }
    },

    // Haley

    "haley": {
      "pee": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Haley.Pee.Fail.Pre.1}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Haley.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Haley.Pee.Fail.Post.2}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Haley.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Haley.Poop.Fail.Pre.2}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Haley.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Haley.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Haley.Poop.Fail.Post.3}}"
          ]
        }
      }
    },

    // Leah

    "leah": {
      "pee": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Leah.Pee.Fail.Pre.1}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Leah.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Leah.Pee.Fail.Post.2}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Leah.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Leah.Poop.Fail.Pre.2}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Leah.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Leah.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Leah.Poop.Fail.Post.3}}"
          ]
        }
      }
    },

    // Penny

    "penny": {
      "pee": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Penny.Pee.Fail.Pre.1}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Penny.Pee.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Penny.Pee.Fail.Post.2}}"
          ]
        }
      },
      "poop": {
        "pre": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Penny.Poop.Fail.Pre.1}}",
            "{{i18n:Potty_Dialogs.Penny.Poop.Fail.Pre.2}}"
          ]
        },
        "post": {
          "success": [
            // no reaction on success
          ],
          "fail": [
            "{{i18n:Potty_Dialogs.Penny.Poop.Fail.Post.1}}",
            "{{i18n:Potty_Dialogs.Penny.Poop.Fail.Post.2}}",
            "{{i18n:Potty_Dialogs.Penny.Poop.Fail.Post.3}}"
          ]
        }
      }
    }
  },

  // ########################################
  // Changing options for nps`s
  // ########################################
  /*
      get_change:           (optional) options when player can change npc

      give_change:          (optional) options when npc can change player

      give_dirty_change:    (optional) options when npc can change player if there are dirty

      options for "get_change", "give_change" and "give_dirty_change":        
  
        min_heart_level:        (optional) minimum heart level of npc.

        min_heart_level_other:  (optional) minimum heart level of other of npc´s

        locations:              (optional) the locations for an offer with a specific heart level

        questions_answered:     (optional) the response id´s of questions, that had to be answered, for an offer with a specific heart level
  
        All single configured options are OR combined. Only on of them has to be true. 

      change_automaticly:   (optional) options for npc´s get automaticly changed

      options for "change_automaticly"

        at_home:                (optional) options for npc get automaticly changed at home

          npc_in_range:           (optional) the name of npc´s, thats has to be in range of npc, to get automaticly changed

          wearing_underwear:      (optional) if the npc is wearing this underwear, they can get chaged automaticly by themself. Use "all" if underweare type dosn´t matter.

        outside:                (optional) options for npc get automaticly changed when not at home

          npc_in_range:           (optional) the name of npc´s, thats has to be in range of npc, to get automaticly changed

          wearing_underwear:      (optional) if the npc is wearing this underwear, they can get chaged automaticly by themself. Use "all" if underweare type dosn´t matter.

          at_location:            (optional) the name of location, the npc has to be, to get automaticly changed

        changeing_chance:       (optional) changing chance for npc, if changing is possible. If not used, npc has a 100 percent chance to get changed automaticly

          base_chance:            basic chance for npc to get changed automaticly if they underwear is used
           
          poopy:                  (optional) chance for npc to get changed automaticly if they underwear is poopy

          wet_half_capacity:      (optional) chance for npc to get changed automaticly if they underwear is wet and the capacity for pee is more than half full

          messy_half_capacity:    (optional) chance for npc to get changed automaticly if they underwear is messy and the capacity for poop is more than half full
          


      Example 1:

        "vincent": {                      options for npc Vincent
          "get_changed": {                options for Vincent, to change them
            "min_heart_level": 6,         the player needs at minimum 6 hearts to offer Vincent a change
            "min_heart_level_other": {    also the player need a minimum heart level of an other npc
              "jodi": 4                   in this case, the player need at minimum 4 hearts from Jodi, You can add more than one npc
            }
          },
          "change_automaticly": {         options for Vincent, to change automaticly
            "at_home": {                  options for get changed automaticly when Vincent is at home
              "npc_in_range": [           if one of these npc´s is hat Vincents home to, he can get changed automaticly
                "jodi",                   if "Jodi" or
                "kent",                   "Kent" or
                "sam"                     "Sam" is at home too, Vincent can get changed automaticly
              ]
            }
            "outside": {                  options for get changed automaticly when vincent is not at home
              "npc_in_range":[            if one of these npc´s is nearby Vincent, he can get changed automaticly
                "jodi",                   if "Jodi" or
                "kent",                   "Kent" or
                "sam",                    "Sam" or
                "penny"                   "Penny" is nearby Vincent when he is not at home, he can get changed automaticly
              ]
            },
            "changeing_chance": {         chances for Vincent, to get changed automaticly, if one of the upper situations is true
              "base_chance": 15,          Vincent have a chance of 15 percent, to get changed automaticly, if he used his underwear
              "poopy": 40,                if Vincent has pooped his underwear, he has a chance of 40 percent, to get changed automaticly
              "wet_half_capacity": 50,    if Vincent´s underwear is more than 50 percent full with pee, he has a chance of 50 percent, to get changed automaticly
              "messy_half_capacity": 90   if Vincent´s underwear is more than 50 percent full with poop, he has a chance of 90 percent, to get changed automaticly
            }
          }
        }

      Example 2:

        "sam": {                          options for npc Sam
          "get_changed": {                options for Sam, to change them
            "min_heart_level": -1,        in  this case, the minimum heart level dosn´t matter
            "questions_answered": {       the player needs to answered questions from sam and get following response id´s that Sam offer a change
              "sam_little_littel": 8,     the player had at minimum a heart level of 8 to sam answered on a question with the response id "sam_little_littel" 
              "sam_little_exited": 8      the player had at minimum a heart level of 8 to sam answered on a question with the response id "sam_little_exited" 
            }
          }
          "give_change": {                options for Sam, to change the player
            "min_heart_level": -1,        in  this case, the minimum heart level dosn´t matter
            "questions_answered": {       the player needs to answered questions from sam and get following response id´s to offer Sam a change
              "sam_little_littel": 8,     the player had at minimum a heart level of 8 to sam answered on a question with the response id "sam_little_littel" 
              "sam_little_exited": 8      the player had at minimum a heart level of 8 to sam answered on a question with the response id "sam_little_exited" 
            }
          }
          "give_dirty_change":{           options for Sam, to change the player if there underwear is dirty
            "min_heart_level": -1,        in  this case, the minimum heart level dosn´t matter
            "locations": {                Sam will change the player with a specific heart level on these locations if there are dirty
              "home": 0                   if sam is at there home, and the player has a minimum heart level of 0, sam will offer a change of dirty underwear
            }
          },
          "change_automaticly": {         options for Sam, to change automaticly
            "at_home": {                  options for get changed automaticly when Sam is at home
              "npc_in_range": [           if one of these npc´s is hat Sam home to, he can get changed automaticly
                "jodi",                   if "Jodi" or
                "kent"                    "Kent" is at home too, sam can get changed automaticly
              ]
            },
            "outside": {                  options for get changed automaticly when Sam is not at home
              "npc_in_range":[            if one of these npc´s is nearby Sam, he can get changed automaticly
                "jodi",                   if "Jodi" or
                "kent"                    if "Kent" is nearby Sam when he is not at home, he can get changed automaticly
              ],
              "wearing_underwear": [      if Sam is wearing one of these type of underwear, he can change automaticly by himself
                "training pants",         if Sam is wearing "Training Pants" or
                "lavender pullups"        Sam is wearing "Training Pants", he can change automaticly by himself
              ]
            },
            "changeing_chance": {         chances for Sam, to get changed automaticly, if one of the upper situations is true
              "base_chance": 30,          Sam have a chance of 30 percent, to get changed automaticly, if he used his underwear
              "poopy": 80,                if Sam has pooped his underwear, he has a chance of 80 percent, to get changed automaticly
              "wet_half_capacity": 70,    if Sam´s underwear is more than 50 percent full with pee, he has a chance of 70 percent, to get changed automaticly
              "messy_half_capacity": 100  if Sam´s underwear is more than 50 percent full with poop, he has a chance of 100 percent, to get changed automaticly
            }
          }
        }

  */

  "Villager_Changing_Options": {

    // Gus

    "gus": {
      "give_change": {
        "min_heart_level": 8
      },
      "give_dirty_change": {
        "locations": {
          "Saloon": 0
        }
      }
    },

    // Jodi

    "jodi": {
      "give_change": {
        "min_heart_level": 6
      },
      "give_dirty_change": {
        "locations": {
          "home": 0
        }
      }
    },

    // Vincent

    "vincent": {
      "get_changed": {
        "min_heart_level": 6,
        "min_heart_level_other": {
          "jodi": 4
        }
      },
      "change_automaticly": {
        "at_home": {
          "npc_in_range": [
            "jodi",
            "kent",
            "sam"
          ]
        },
        "outside": {
          "npc_in_range": [
            "jodi",
            "kent",
            "sam",
            "penny"
          ]
        },
        "changeing_chance": {
          "base_chance": 15,
          "poopy": 40,
          "wet_half_capacity": 50,
          "messy_half_capacity": 90
        }
      }
    },

    // Jas

    "jas": {
      "get_changed": {
        "min_heart_level": 6,
        "min_heart_level_other": {
          "marnie": 4
        }
      },
      "change_automaticly": {
        "at_home": {
          "npc_in_range": [
            "marnie",
            "shane"
          ],
          "wearing_underwear": [
            "training pants",
            "lavender pullups"
          ]
        },
        "outside": {
          "npc_in_range": [
            "marnie",
            "shane",
            "penny"
          ]
        },
        "changeing_chance": {
          "base_chance": 15,
          "poopy": 50,
          "wet_half_capacity": 70,
          "messy_half_capacity": 100
        }
      }
    },

    // Sam

    "sam": {
      "get_changed": {
        "questions_answered": {
          "sam_little_littel": 8,
          "sam_little_exited": 8
        }
      },
      "give_change": {
        "questions_answered": {
          "sam_little_littel": 8,
          "sam_little_exited": 8
        }
      },
      "give_dirty_change": {
        "locations": {
          "home": 0
        }
      },
      "change_automaticly": {
        "at_home": {
          "npc_in_range": [
            "jodi",
            "kent"
          ],
          "wearing_underwear": [
            "training pants",
            "lavender pullups"
          ]
        },
        "outside": {
          "npc_in_range": [
            "jodi",
            "kent"
          ],
          "wearing_underwear": [
            "training pants",
            "lavender pullups"
          ]
        },
        "changeing_chance": {
          "base_chance": 30,
          "poopy": 80,
          "wet_half_capacity": 70,
          "messy_half_capacity": 100
        }
      }
    },

    // Abigail

    "abigail": {
      "get_changed": {
        "min_heart_level": 8
      },
      "give_change": {
        "min_heart_level": 8
      },
      "give_dirty_change": {
        "min_heart_level": 8
      },
      "change_automaticly": {
        "at_home": {
          "wearing_underwear": [
            "all"
          ]
        },
        "outside": {
          "npc_in_range": [
            "caroline",
            "pierre"
          ],
          "at_location": [
            "hospital",
            "saloon"
          ],
          "wearing_underwear": [
            "training pants",
            "lavender pullups"
          ]
        },
        "changeing_chance": {
          "base_chance": 40,
          "poopy": 100,
          "wet_half_capacity": 90
        }
      }
    },

    // Maru

    "maru": {
      "get_changed": {
        "min_heart_level": 4
      },
      "give_change": {
        "min_heart_level": 4,
        "locations": {
          "hospital": 0
        }
      },
      "give_dirty_change": {
        "min_heart_level": 4,
        "locations": {
          "hospital": 0
        }
      },
      "change_automaticly": {
        "at_home": {
          "wearing_underwear": [
            "all"
          ]
        },
        "outside": {
          "wearing_underwear": [
            "all"
          ]
        },
        "changeing_chance": {
          "base_chance": 40,
          "poopy": 100,
          "wet_half_capacity": 90
        }
      }
    },

    // Emily

    "emily": {
      "get_changed": {
        "min_heart_level": 8
      },
      "give_change": {
        "min_heart_level": 8
      },
      "give_dirty_change": {
        "min_heart_level": 8,
        "locations": {
          "home": 4
        }
      },
      "change_automaticly": {
        "at_home": {
          "wearing_underwear": [
            "all"
          ]
        },
        "outside": {
          "wearing_underwear": [
            "all"
          ]
        },
        "changeing_chance": {
          "base_chance": 40,
          "poopy": 100,
          "wet_half_capacity": 90
        }
      }
    },

    // Haley

    "haley": {
      "get_changed": {
        "min_heart_level": 8
      },
      "give_change": {
        "min_heart_level": 8
      },
      "give_dirty_change": {
        "min_heart_level": 8
      },
      "change_automaticly": {
        "at_home": {
          "wearing_underwear": [
            "all"
          ]
        },
        "outside": {
          "wearing_underwear": [
            "training pants",
            "lavender pullups"
          ],
          "at_location": [
            "hospital",
            "saloon"
          ]
        },
        "changeing_chance": {
          "base_chance": 40,
          "poopy": 100,
          "wet_half_capacity": 90
        }
      }
    },

    // Leah

    "leah": {
      "get_changed": {
        "min_heart_level": 8
      },
      "give_change": {
        "min_heart_level": 8
      },
      "give_dirty_change": {
        "min_heart_level": 8
      },
      "change_automaticly": {
        "at_home": {
          "wearing_underwear": [
            "all"
          ]
        },
        "outside": {
          "wearing_underwear": [
            "all"
          ]
        },
        "changeing_chance": {
          "base_chance": 40,
          "poopy": 100,
          "wet_half_capacity": 90
        }
      }
    },

    // Penny

    "penny": {
      "get_changed": {
        "min_heart_level": 6,
        "questions_answered": {
          "penny_adult_little": 4,
          "penny_adult_big": 4,
          "penny_potty_trouble": 4
        }
      },
      "give_change": {
        "min_heart_level": 6,
        "questions_answered": {
          "penny_adult_little": 4,
          "penny_adult_big": 4
        }
      },
      "give_dirty_change": {
        "min_heart_level": 6,
        "questions_answered": {
          "penny_adult_little": 4,
          "penny_adult_big": 4
        }
      },
      "change_automaticly": {
        "at_home": {
          "wearing_underwear": [
            "all"
          ]
        },
        "outside": {
          "wearing_underwear": [
            "all"
          ]
        },
        "changeing_chance": {
          "base_chance": 40,
          "poopy": 100,
          "wet_half_capacity": 90
        }
      }
    }
  },

  // ########################################
  // Options for npc underwear 
  // if you change them
  /*
    friendship:           friendship loss or win if you cange the npc these kind of underwear
    dialog_key:           dialog_key in the json file for the nps in the direction "Regression Diapogue/Dialogue/NPCs"
    observerfriendship:   friendship los or win if you cange the npc these kind of underwear an an other npc observe the change
                          parameter will be seperated by "_"
                            friend
                            name of npc
                            friendchip loss or win
  */
  // ########################################


  "Villager_Underwear_Options": {

    // Vincent

    "vincent": {
      "baby print diaper": {
        "friendship": "20",
        "dialog_key": "Change_Diaper_Accept_BabyPrint",
        "observerfriendship": "friend_Jodi_10"
      },
      "lavender pullups": {
        "friendship": "-20",
        "dialog_key": "Change_Diaper_Accept_Lavender",
        "observerfriendship": "friend_Jodi_-5"
      },
      "training pants": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_Training",
        "observerfriendship": "friend_Jodi_-10"
      },
      "big kid undies": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_BigKids",
        "observerfriendship": "friend_Jodi_-40"
      },
      "dinosaur undies": {
        "friendship": "15",
        "dialog_key": "Change_Diaper_Accept_Dinos",
        "observerfriendship": "friend_Jodi_-20"
      }
    },

    // Jas

    "jas": {
      "baby print diaper": {
        "friendship": "-30",
        "dialog_key": "Change_Diaper_Accept_BabyPrint",
        "observerfriendship": "friend_Marnie_-10"
      },
      "lavender pullups": {
        "friendship": "30",
        "dialog_key": "Change_Diaper_Accept_Lavender",
        "observerfriendship": "friend_Marnie_20"
      },
      "training pants": {
        "friendship": "30",
        "dialog_key": "Change_Diaper_Accept_Training",
        "observerfriendship": "friend_Marnie_25"
      },
      "big kid undies": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_BigKids",
        "observerfriendship": "friend_Marnie_-20"
      },
      "dinosaur undies": {
        "friendship": "-30",
        "dialog_key": "Change_Diaper_Accept_Dinos",
        "observerfriendship": "friend_Marnie_-15"
      }
    },

    // Sam

    "sam": {
      "baby print diaper": {
        "friendship": "15",
        "dialog_key": "Change_Diaper_Accept_BabyPrint",
        "observerfriendship": "friend_Jodi_10"
      },
      "training pants": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_Training",
        "observerfriendship": "friend_Jodi_10"
      },
      "big kid undies": {
        "friendship": "-20",
        "dialog_key": "Change_Diaper_Accept_BigKids",
        "observerfriendship": "friend_Jodi_15"
      },
      "joja diaper": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_Joja",
        "observerfriendship": "friend_Jodi_5"
      },
      "heart diaper": {
        "friendship": "30",
        "dialog_key": "Change_Diaper_Accept_HeartDiaper",
        "observerfriendship": "friend_Jodi_15"
      }
    },

    // Abigail

    "abigail": {
      "baby print diaper": {
        "friendship": "-50",
        "dialog_key": "Change_Diaper_Accept_BabyPrint",
        "observerfriendship": "friend_Caloline_5"
      },
      "lavender pullups": {
        "friendship": "5",
        "dialog_key": "Change_Diaper_Accept_Lavender",
        "observerfriendship": "friend_Caloline_5"
      },
      "joja diaper": {
        "friendship": "20",
        "dialog_key": "Change_Diaper_Accept_Joja",
        "observerfriendship": "friend_Caloline_10"
      },
      "heart diaper": {
        "friendship": "30",
        "dialog_key": "Change_Diaper_Accept_HeartDiaper",
        "observerfriendship": "friend_Caloline_10"
      }
    },

    // Maru

    "maru": {
      "baby print diaper": {
        "friendship": "-50",
        "dialog_key": "Change_Diaper_Accept_BabyPrint",
        "observerfriendship": "friend_Robin_5"
      },
      "lavender pullups": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_Lavender",
        "observerfriendship": "friend_Robin_5"
      },
      "space diaper": {
        "friendship": "30",
        "dialog_key": "Change_Diaper_Accept_SpaceDiaper",
        "observerfriendship": "friend_Robin_15"
      },
      "heart diaper": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_HeartDiaper",
        "observerfriendship": "friend_Robin_10"
      }
    },

    // Emily

    "emily": {
      "baby print diaper": {
        "friendship": "-50",
        "dialog_key": "Change_Diaper_Accept_BabyPrint"
      },
      "lavender pullups": {
        "friendship": "5",
        "dialog_key": "Change_Diaper_Accept_Lavender"
      },
      "cloth diaper": {
        "friendship": "30",
        "dialog_key": "Change_Diaper_Accept_ClothDiaper"
      },
      "heart diaper": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_HeartDiaper"
      }
    },

    // Leah

    "leah": {
      "baby print diaper": {
        "friendship": "-50",
        "dialog_key": "Change_Diaper_Accept_BabyPrint"
      },
      "lavender pullups": {
        "friendship": "15",
        "dialog_key": "Change_Diaper_Accept_Lavender"
      },
      "pawprint diaper": {
        "friendship": "30",
        "dialog_key": "Change_Diaper_Accept_PawprintDiaper"
      },
      "heart diaper": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_HeartDiaper"
      }
    },

    // Penny

    "penny": {
      "baby print diaper": {
        "friendship": "-50",
        "dialog_key": "Change_Diaper_Accept_BabyPrint",
        "observerfriendship": "friend_Pam_0"
      },
      "lavender pullups": {
        "friendship": "25",
        "dialog_key": "Change_Diaper_Accept_Lavender",
        "observerfriendship": "friend_Pam_10"
      },
      "heart diaper": {
        "friendship": "10",
        "dialog_key": "Change_Diaper_Accept_HeartDiaper",
        "observerfriendship": "friend_Pam_10"
      }
    }
  },

  // ########################################
  /* Villager Friendship Modifier 
    for your tasks / states
   
    ground:           going go on the ground, successfully peeing/pooping there
    ground_attempt:   trying to go on the ground, but nothing comes out
    soiled:           successfully peeing/pooping in your pants
    dirty:            having dirty cloth (wet/poopy pants). NPC usually don't talk to you if you are filthy
    
*/
  // ########################################

  "Villager_Friendship_Modifier": {
    "adult": {
      "ground": 2.0,
      "ground_attempt": 1.0,
      "soiled": 1.0,
      "dirty": 0.3
    },
    "teen": {
      "ground": 1.5,
      "ground_attempt": 0.5,
      "soiled": 1.0,
      "dirty": 0.1
    },
    "kid": {
      "ground": 1.0,
      "ground_attempt": 0.25,
      "soiled": 0,
      "dirty": 0
    },
    "animal": {
      "ground": 0,
      "ground_attempt": 0,
      "soiled": 0,
      "dirty": 0
    },
    "abigail": {
      "ground": 1.0,
      "ground_attempt": 0.5,
      "soiled": 0,
      "dirty": 0.1
    },
    "jodi": {
      "ground": 1.0,
      "ground_attempt": 0.5,
      "soiled": 0,
      "dirty": 0
    },
    "sam": {
      "ground": 2.0,
      "ground_attempt": 1.0,
      "soiled": 0,
      "dirty": 0.1
    },
    "penny": {
      "ground": 1.0,
      "ground_attempt": 0.5,
      "soiled": 0,
      "dirty": 0.05
    },
    "jas": {
      "ground": 1.0,
      "ground_attempt": 0.5,
      "soiled": 0,
      "dirty": 0
    }
  },

  // ########################################
  /* NPC reactions depending on
    what you are doing and how is 
    your relation    
*/
  // ########################################

  "Villager_Reactions": {
    "adult": {
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Adult.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Adult.Soiled.Verynice.2}}",
        "{{i18n:Villager_Reactions.Adult.Soiled.Verynice.3}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Adult.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Adult.Soiled.Nice.2}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Adult.Soiled.Mean.1}}"
      ],
      "dirty": [
        "{{i18n:Villager_Reactions.Adult.Dirty.1}}"
      ],
      "ground": [
        "{{i18n:Villager_Reactions.Adult.Ground.1}}",
        "{{i18n:Villager_Reactions.Adult.Ground.2}}"
      ],
      "ground_attempt": [
        "{{i18n:Villager_Reactions.Adult.Ground.Attempt.1}}",
        "{{i18n:Villager_Reactions.Adult.Ground.Attempt.2}}"
      ]
    },
    "teen": {
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Teen.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Teen.Soiled.Verynice.2}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Teen.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Teen.Soiled.Nice.2}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Teen.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Teen.Soiled.Mean.2}}"
      ],
      "dirty": [
        "{{i18n:Villager_Reactions.Teen.Dirty.1}}"
      ],
      "ground": [
        "{{i18n:Villager_Reactions.Teen.Ground.1}}",
        "{{i18n:Villager_Reactions.Teen.Ground.2}}",
        "{{i18n:Villager_Reactions.Teen.Ground.3}}"
      ],
      "ground_attempt": [
        "{{i18n:Villager_Reactions.Teen.Ground.Attempt.1}}",
        "{{i18n:Villager_Reactions.Teen.Ground.Attempt.2}}"
      ]
    },
    "kid": {
      "general": [
        "{{i18n:Villager_Reactions.Kid.General.1}}",
        "{{i18n:Villager_Reactions.Kid.General.2}}",
        "{{i18n:Villager_Reactions.Kid.General.3}}"
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Kid.Soiled.Verynice.1}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Kid.Soiled.Nice.1}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Kid.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Kid.Soiled.Mean.2}}",
        "{{i18n:Villager_Reactions.Kid.Soiled.Mean.3}}",
        "{{i18n:Villager_Reactions.Kid.Soiled.Mean.4}}"
      ],
      "dirty": [
        "{{i18n:Villager_Reactions.Kid.Dirty.1}}"
      ],
      "ground": [
        "{{i18n:Villager_Reactions.Kid.Ground.1}}",
        "{{i18n:Villager_Reactions.Kid.Ground.2}}",
        "{{i18n:Villager_Reactions.Kid.Ground.3}}"
      ],
      "ground_attempt": [
        "{{i18n:Villager_Reactions.Kid.Ground.Attempt.1}}",
        "{{i18n:Villager_Reactions.Kid.Ground.Attempt.2}}"
      ]
    },
    "animal": {
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Animal.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Animal.Soiled.Nice.1}}"
      ],
      "ground": [
        "{{i18n:Villager_Reactions.Animal.Ground.1}}"
      ],
      "ground_attempt": [
        "{{i18n:Villager_Reactions.Animal.Ground.Attempt.1}}"
      ]
    },

    // ########################################
    // spacific reaction for singel npc´s
    /*
      general_offer_change:   message show if you talk to npc and there offer you an underwear change
      dirty_offer_change:     message show if you talk to npc, your underwear is wet/messy and there offer you an underwear change
      soiled_verynice:
      soiled_nice:
      soiled_mean:

  */
    // ########################################

    // ##########
    // NPC´s they can change you
    // ##########

    "gus": {
      "dirty_offer_change_player": [
        "{{i18n:Villager_Reactions.Gus.Change.Dirty_Offer.1}}$GETTING_CHANGED_DIALOG$ \"gus\""
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.2}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.3}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.4}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.5}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.6}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.7}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.8}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Verynice.9}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Gus.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Nice.2}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Nice.3}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Nice.4}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Gus.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Gus.Soiled.Mean.2}}"
      ]
    },
    "jodi": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Jodi.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED_BAD#[OnClean: {{i18n:Villager_Reactions.Jodi.Change.General_Offer.Player.1.Underwear_Clean}}][OnSlightlyWet: {{i18n:Villager_Reactions.Jodi.Change.General_Offer.Player.1.Underwear_Slightly_Wet}}]|$GETTING_CHANGED_DIALOG$ \"jodi\""
      ],
      "dirty_offer_change": [
        "$p dirty_change_no# {{i18n:Villager_Reactions.Sam.Change.Dirty_Offer.1.Answer_No}}| {{i18n:Villager_Reactions.Sam.Change.Dirty_Offer.1.Answer_Yes}}$GETTING_CHANGED_DIALOG$ \"jodi\""
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Jodi.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Jodi.Soiled.Verynice.2}}$GETTING_CHANGED_DIALOG$ \"jodi\"",
        "{{i18n:Villager_Reactions.Jodi.Soiled.Verynice.3}}$GETTING_CHANGED_DIALOG$ \"jodi\"",
        "{{i18n:Villager_Reactions.Jodi.Soiled.Verynice.4}}",
        "{{i18n:Villager_Reactions.Jodi.Soiled.Verynice.5}}$GETTING_CHANGED_DIALOG$ \"jodi\""
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Jodi.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Jodi.Soiled.Nice.2}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Jodi.Soiled.Mean.1}}"
      ]
    },
    "harvey": {
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.2}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.3}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.4}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.5}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.6}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.7}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Verynice.8}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Harvey.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Nice.2}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Nice.3}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Nice.4}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Nice.5}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Harvey.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Mean.2}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Mean.3}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Mean.4}}",
        "{{i18n:Villager_Reactions.Harvey.Soiled.Mean.5}}"
      ]
    },

    // ##########
    // NPC´s you can change
    // ##########

    "vincent": {
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Vincent.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"vincent\"#{{i18n:Villager_Reactions.Vincent.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Vincent.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Verynice.2}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Verynice.3}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Verynice.4}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Verynice.5}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Verynice.6}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Vincent.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Nice.2}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Nice.3}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Nice.4}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Nice.5}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Vincent.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Mean.2}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Mean.3}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Mean.4}}",
        "{{i18n:Villager_Reactions.Vincent.Soiled.Mean.5}}"
      ],
      "ground": [
        "{{i18n:Villager_Reactions.Vincent.Ground.1}}",
        "{{i18n:Villager_Reactions.Vincent.Ground.2}}",
        "{{i18n:Villager_Reactions.Vincent.Ground.3}}"
      ]
    },
    "jas": {
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Jas.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"jas\"#{{i18n:Villager_Reactions.Jas.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Jas.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Verynice.2}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Verynice.3}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Verynice.4}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Verynice.5}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Verynice.6}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Jas.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Nice.2}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Nice.3}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Jas.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Mean.2}}",
        "{{i18n:Villager_Reactions.Jas.Soiled.Mean.3}}"
      ],
      "ground": [
        "{{i18n:Villager_Reactions.Jas.Ground.1}}",
        "{{i18n:Villager_Reactions.Jas.Ground.2}}",
        "{{i18n:Villager_Reactions.Jas.Ground.3}}"
      ]
    },

    // ##########
    // NPC´s they can change you and you can change
    // ##########

    "sam": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Sam.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED#{{i18n:Villager_Reactions.Sam.Change.General_Offer.Player.1.Underwear_ok}}|$GETTING_CHANGED_DIALOG$ \"sam\""
      ],
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Sam.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"sam\"#{{i18n:Villager_Reactions.Sam.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "dirty_offer_change": [
        "{{i18n:Villager_Reactions.Sam.Change.Dirty_Offer.1}}$GETTING_CHANGED_DIALOG$ \"sam\""
      ],
      "soiled_verynice": [
        "#$p child_diaper_no#{{i18n:Villager_Reactions.Sam.Soiled.Verynice.1}}#$GETTING_CHANGED_DIALOG$ \"sam\"",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.2}}$GETTING_CHANGED_DIALOG$ \"sam\"",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.3}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.4}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.5}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.6}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.7}}$GETTING_CHANGED_DIALOG$ \"sam\"",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.8}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.9}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.10}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Verynice.11}}"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Sam.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Nice.2}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Nice.3}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Nice.4}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Sam.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Mean.2}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Mean.3}}",
        "{{i18n:Villager_Reactions.Sam.Soiled.Mean.4}}",
        "#$p child_diaper_no#{{i18n:Villager_Reactions.Sam.Soiled.Mean.5.Child_No}}|{{i18n:Villager_Reactions.Sam.Soiled.Mean.5.Child_Yes}}"
      ]
    },
    "abigail": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Abigail.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED#{{Villager_Reactions.Abigail.Change.General_Offer.Player.1.Underwear_ok}}|$GETTING_CHANGED_DIALOG$ \"abigail\""
      ],
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Abigail.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"abigail\"#{{i18n:Villager_Reactions.Abigail.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "dirty_offer_change": [
        "$p dirty_change_no#{{i18n:Villager_Reactions.Abigail.Change.Dirty_Offer.No}}|{{i18n:Villager_Reactions.Abigail.Change.Dirty_Offer.Yes}}$GETTING_CHANGED_DIALOG$ \"abigail\""
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Abigail.Soiled.Verynice.1}}#$GETTING_CHANGED_DIALOG$ \"abigail\"",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Verynice.2}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Verynice.3}}#$b#$CHANGE_OTHER_DIALOG$",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Verynice.4}}#$GETTING_CHANGED_DIALOG$ \"abigail\"",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Verynice.5}}#$b#$CHANGE_OTHER_DIALOG$"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Abigail.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Nice.2}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Nice.3}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Nice.4}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Nice.5}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Nice.6}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Abigail.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Mean.2}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Mean.3}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Mean.4}}",
        "{{i18n:Villager_Reactions.Abigail.Soiled.Mean.5}}"
      ]
    },
    "maru": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Maru.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED#{{i18n:Villager_Reactions.Maru.Change.General_Offer.Player.1.Underwear_ok}}|$GETTING_CHANGED_DIALOG$ \"maru\""
      ],
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Maru.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"maru\"#{{i18n:Villager_Reactions.Maru.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "dirty_offer_change": [
        "{{i18n:Villager_Reactions.Maru.Change.Dirty_Offer.1}}$GETTING_CHANGED_DIALOG$ \"maru\""
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Maru.Soiled.Verynice.1}}$GETTING_CHANGED_DIALOG$ \"maru\""
      ],
      "soilded_nice": [
        "{{i18n:Villager_Reactions.Maru.Soiled.Nice.1}}$GETTING_CHANGED_DIALOG$ \"maru\""
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Maru.Soiled.Mean.1}}"
      ]
    },
    "emily": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Emily.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED#{{i18n:Villager_Reactions.Emily.Change.General_Offer.Player.1.Underwear_ok}}|$GETTING_CHANGED_DIALOG$ \"emily\""
      ],
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Emily.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"emily\"#{{i18n:Villager_Reactions.Emily.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "dirty_offer_change": [
        "{{i18n:Villager_Reactions.Emily.Change.Dirty_Offer.1}}$GETTING_CHANGED_DIALOG$ \"emily\""
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Emily.Soiled.Verynice.1}}"
      ],
      "soilded_nice": [
        "{{i18n:Villager_Reactions.Emily.Soiled.Nice.1}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Emily.Soiled.Mean.1}}"
      ]
    },
    "haley": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Haley.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED#{{i18n:Villager_Reactions.Haley.Change.General_Offer.Player.1.Underwear_ok}}|$GETTING_CHANGED_DIALOG$ \"haley\""
      ],
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Haley.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"haley\"#{{i18n:Villager_Reactions.Haley.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Haley.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Haley.Soiled.Verynice.2}}#$b#$GETTING_CHANGED_DIALOG$ \"haley\"",
        "{{i18n:Villager_Reactions.Haley.Soiled.Verynice.3}}#$b#$CHANGE_OTHER_DIALOG$"
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Haley.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Haley.Soiled.Nice.2}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Haley.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Haley.Soiled.Mean.2}}",
        "{{i18n:Villager_Reactions.Haley.Soiled.Mean.3}}"
      ]
    },
    "leah": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Leah.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED#{{i18n:Villager_Reactions.Leah.Change.General_Offer.Player.1.Underwear_ok}}|$GETTING_CHANGED_DIALOG$ \"leah\""
      ],
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Leah.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"leah\"#{{i18n:Villager_Reactions.Leah.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "dirty_offer_change": [
        "{{i18n:Villager_Reactions.Leah.Change.Dirty_Offer.1}}$GETTING_CHANGED_DIALOG$ \"leah\""
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Leah.Soiled.Verynice.1}}"
      ],
      "soilded_nice": [
        "{{i18n:Villager_Reactions.Leah.Soiled.Nice.1}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Leah.Soiled.Mean.1}}"
      ]
    },
    "penny": {
      "general_offer_change_player": [
        "{{i18n:Villager_Reactions.Penny.Change.General_Offer.Player.1.Pre}}#$b#$query !DIAPER_USED#{{i18n:Villager_Reactions.Penny.Change.General_Offer.Player.1.Underwear_ok}}|$GETTING_CHANGED_DIALOG$ \"penny\""
      ],
      "general_offer_change_npc": [
        "{{i18n:Villager_Reactions.Penny.Change.General_Offer.Npc.1.Pre}}#$b#$query !DIAPER_USED \"penny\"#{{i18n:Villager_Reactions.Penny.Change.General_Offer.Npc.1.Underwear_ok}}|$CHANGE_OTHER_DIALOG$"
      ],
      "general_fallback": [
        "{{i18n:Villager_Reactions.Penny.Change.General.Fallback.1}}"
      ],
      "dirty_offer_change": [
        "{{i18n:Villager_Reactions.Penny.Change.Dirty_Offer.1}}$GETTING_CHANGED_DIALOG$ \"penny\""
      ],
      "soiled_verynice": [
        "{{i18n:Villager_Reactions.Penny.Soiled.Verynice.1}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Verynice.2}}$GETTING_CHANGED_DIALOG$ \"penny\"",
        "{{i18n:Villager_Reactions.Penny.Soiled.Verynice.3}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Verynice.4}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Verynice.5}}",
        "#$p child_diaper_no#{{i18n:Villager_Reactions.Penny.Soiled.Verynice.6}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Verynice.7}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Verynice.8}}$GETTING_CHANGED_DIALOG$ \"penny\""
      ],
      "soiled_nice": [
        "{{i18n:Villager_Reactions.Penny.Soiled.Nice.1}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Nice.2}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Nice.3}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Nice.4}}"
      ],
      "soiled_mean": [
        "{{i18n:Villager_Reactions.Penny.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Mean.1}}",
        "{{i18n:Villager_Reactions.Penny.Soiled.Mean.1}}",
        "#$p child_diaper_no#{{i18n:Villager_Reactions.Penny.Soiled.Mean.1}}"
      ]
    }
  },

  // ########################################
  // Messages for your pants and underwear
  // ########################################

  "LookPants": [
    "{{i18n:Look_Pants.1}}"
  ],
  "Underwear_Clean": "{{i18n:Underwear.Clean}}",
  "Underwear_Drying": "{{i18n:Underwear.Drying}}",
  "Underwear_Wet": [ //Chosen based on diaper wetness, applied after Underwear_Messy. Words in brackets only show if underwear is also messy.
    "{{i18n:Underwear.Wet.1}}",
    "{{i18n:Underwear.Wet.2}}",
    "{{i18n:Underwear.Wet.3}}",
    "{{i18n:Underwear.Wet.4}}",
    "{{i18n:Underwear.Wet.5}}"
  ],
  "Underwear_Messy": [ //Chosen based on diaper messiness, applied before Underwear_Wet. Words in brackets are only used if underwear is also wet.
    "{{i18n:Underwear.Messy.1}}",
    "{{i18n:Underwear.Messy.2}}",
    "{{i18n:Underwear.Messy.3}}",
    "{{i18n:Underwear.Messy.4}}",
    "{{i18n:Underwear.Messy.5}}"
  ],

  // ########################################
  // Consumables
  // ########################################

  "Consumables": {
    // 
    //
    //Working on creating entries for every consumable.
    //Water values are arbitrary, but should be accurate to each other relatively. Poisons mean vomitting, indigestion, and other issues, therefore poisonous items cause a loss to calories and water.
    //
    //Crops
    //With a lot of these, I looked up the calorie count for an average size or average amount for small items like berries, then rounded out the numbers. For balance, some really small numbers are unnaturally high. For grains, I went with half a cup of grains. All items are assumed to undergo basic cooking if necesary to make edible, such as with potatoes.

    // Floximo (comment): I appriciate all the work that has gone into making it realistic, but in terms of gameplay its disastrous.
    // Harvesting a plot that gives us resources worth 200 coins and making it value 1/40 of the daily calorie intake after 8 days of growing is not fun or challenging, it is unbalanced.
    // The assumtion should be that it is reasonable to harvest and store an amount of food that can feed at least 4 people over the winter (usual family size). That means 1 artichoke or 1 corn is not an ear but a yield of a garden plot (so more like 10 to 20 times that)
    // We also assume we eat things cooked. Days are very short, so this assumtion should be a given as reasonable.
    // In any case, this manual list is not archiving any goal, not realism, not balance, not fun or easy of maintainance. In fact it also fails on being complete and as such causes issues in anything imaginable. As such we try to get Energy/Health values from the game instead.

    // ########################################
    // Veggies
    // ########################################

    "Amaranth": {
      "name": "Amaranth",
      "waterContent": 0,
      "calorieContent": 350 //Half cup Amaranth, made as simple bread or cooked directly like rice
    },
    "Artichoke": {
      "name": "Artichoke",
      "waterContent": 200,
      "calorieContent": 150 //Two large artichokes, raw
    },
    "Beet": {
      "name": "Beet",
      "waterContent": 25,
      "calorieContent": 140 //Four beets, raw
    },
    "Bok Choy": {
      "name": "Bok Choy",
      "waterContent": 75,
      "calorieContent": 110 //One head of bok choy, raw
    },
    "Corn": {
      "name": "Corn",
      "waterContent": 25,
      "calorieContent": 190 //One large ear of sweet corn, simply cooked
    },
    "Eggplant": {
      "name": "Eggplant",
      "waterContent": 50,
      "calorieContent": 150 //One large Eggplant, simply cooked
    },
    "Fiddlehead Fern": {
      "name": "Fiddlehead Fern",
      "waterContent": 25,
      "calorieContent": 140 //Four fiddleheads, raw
    },
    "Garlic": {
      "name": "Garlic",
      "waterContent": 25,
      "calorieContent": 50 //One large head of garlic, raw
    },
    "Green Bean": {
      "name": "Green Bean",
      "waterContent": 25,
      "calorieContent": 160 //Four large greenbeans, raw or simply cooked
    },
    "Hops": {
      "name": "Hops",
      "waterContent": 25,
      "calorieContent": 350 //Half cup of hops, can't find a calorie count since people don't actually eat hops, so just using Amaranth's
    },
    "Kale": {
      "name": "Kale",
      "waterContent": 25,
      "calorieContent": 100 //Enough kale leaves to match a head of lettuce, raw
    },
    "Parsnip": {
      "name": "Parsnip",
      "waterContent": 25,
      "calorieContent": 150 //Two parsnips, raw
    },
    "Potato": {
      "name": "Potato",
      "waterContent": 25,
      "calorieContent": 180 //One large potato, 'baked'
    },
    "Radish": {
      "name": "Radish",
      "waterContent": 25,
      "calorieContent": 100 //20 radishes at 5calories each, raw. According to every source I can find, a one inch wide radish only contains 1.9}} calories. This doesn't seem right, so I bumped it up.
    },
    "Red Cabbage": {
      "name": "Red Cabbage",
      "waterContent": 75,
      "calorieContent": 350 //One large head of red cabbage, raw
    },
    "Taro Root": {
      "name": "Taro Root",
      "waterContent": 50,
      "calorieContent": 500 //One small taro root (1pound), cooked simply. IRL, Normal taro root, harvested after 8-10 months, is 2-4 pounds. 
    },
    "Tomato": {
      "name": "Tomato",
      "waterContent": 100,
      "calorieContent": 140 //Four large tomatoes, raw
    },
    "Unmill Rice": {
      "name": "Unmill Rice",
      "waterContent": 25,
      "calorieContent": 350 //Half cup, cooked simply
    },
    "Yam": {
      "name": "Yam",
      "waterContent": 25,
      "calorieContent": 180 //One Large yam, cooked simply
    },

    // ########################################
    // Fruit
    // ########################################

    "Apple": {
      "name": "Apple",
      "waterContent": 100,
      "calorieContent": 120 //One large apple, raw
    },
    "Apricot": {
      "name": "Apricot",
      "waterContent": 100,
      "calorieContent": 100 //Four apricots, raw
    },
    "Banana": {
      "name": "Banana",
      "waterContent": 50,
      "calorieContent": 130 //One large banana, raw
    },
    "Blackberry": {
      "name": "Blackberry",
      "waterContent": 50,
      "calorieContent": 140 //Two cups of blackberries, raw
    },
    "Blueberry": {
      "name": "Blueberry",
      "waterContent": 50,
      "calorieContent": 170 //Two cups of blueberries, raw
    },
    "Cactus Fruit": {
      "name": "Cactus Fruit",
      "waterContent": 100,
      "calorieContent": 120 //Two large fruits, raw
    },
    "Cherry": {
      "name": "Cherry",
      "waterContent": 50,
      "calorieContent": 150 //Two cups of cherries, raw
    },
    "Cranberries": {
      "name": "Cranberries",
      "waterContent": 50,
      "calorieContent": 100 //Two cups of cranberries, raw
    },
    "Crystal Fruit": {
      "name": "Crystal Fruit",
      "waterContent": 150,
      "calorieContent": 350 //One large crystal fruit. Fantasy item, so I get to dictate it. >:3
    },
    "Grape": {
      "name": "Grape",
      "waterContent": 100,
      "calorieContent": 220 //Two cups of grapes, raw
    },
    "Hot Pepper": {
      "name": "Hot Pepper",
      "waterContent": -500,
      "calorieContent": 100 //Four cups of Jalapenos to barely make it to 100. Have some water ready.
    },
    "Mango": {
      "name": "Mango",
      "waterContent": 100,
      "calorieContent": 135 //One Mango, raw
    },
    "Melon": {
      "name": "Melon",
      "waterContent": 125,
      "calorieContent": 500 //One large honeydew melon as reference for the stardew melon, raw
    },
    "Orange": {
      "name": "Orange",
      "waterContent": 100,
      "calorieContent": 100 //One large orange, raw
    },
    "Peach": {
      "name": "Peach",
      "waterContent": 100,
      "calorieContent": 130 //Two peaches, raw
    },
    "Pineapple": {
      "name": "Pineapple",
      "waterContent": 125,
      "calorieContent": 300 //One large pineapple, raw. Your mouth is gonna tingle after eating this.
    },
    "Pomegranate": {
      "name": "Pomegranate",
      "waterContent": 50,
      "calorieContent": 130 //One large pomegranate, raw
    },
    "Qi Fruit": {
      "name": "Qi Fruit",
      "waterContent": 500,
      "calorieContent": 1000 //Qi Fruit? We get to cultivate now? Well, in the cultivator novels, Qi Fruit tends to be able to 'sustain the martial artist for a week' and such.
    },
    "Salmonberry": {
      "name": "Salmonberry",
      "waterContent": 25,
      "calorieContent": 150 //Two cups of salmonberries, raw
    },
    "Spice Berry": {
      "name": "Spice Berry",
      "waterContent": -25,
      "calorieContent": 180 //Two cups of spice berries, raw
    },
    "Starfruit": {
      "name": "Starfruit",
      "waterContent": 125,
      "calorieContent": 400 //RL starfruits are about 40 calories each; this fruit seems to be quite different from those, though
    },
    "Strawberry": {
      "name": "Strawberry",
      "waterContent": 50,
      "calorieContent": 100 //Two cups of strawberries, raw
    },
    "Wild Plum": {
      "name": "Wild Plum",
      "waterContent": 50,
      "calorieContent": 120 //Four plums, raw
    },

    // ########################################
    // Flower
    // ########################################

    "Blue Jazz": {
      "name": "Blue Jazz",
      "waterContent": 25,
      "calorieContent": 50
    },
    "Crocus": {
      "name": "Crocus",
      "waterContent": 25,
      "calorieContent": 50
    },
    "Fairy Rose": {
      "name": "Fairy Rose",
      "waterContent": 25,
      "calorieContent": 50
    },
    "Poppy": {
      "name": "Poppy",
      "waterContent": 25,
      "calorieContent": 50
    },
    "Summer Spangle": {
      "name": "Summer Spangle",
      "waterContent": 25,
      "calorieContent": 50
    },
    "Sunflower": {
      "name": "Sunflower",
      "waterContent": 25,
      "calorieContent": 200 //Sunflower seeds are boosting this over other flowers
    },
    "Sweet Pea": {
      "name": "Sweet Pea",
      "waterContent": 25,
      "calorieContent": 50
    },
    "Tulip": {
      "name": "Tulip",
      "waterContent": 25,
      "calorieContent": 50
    },

    // ########################################
    // Forage
    // ########################################

    "Cave Carrot": {
      "name": "Cave Carrot",
      "waterContent": 25,
      "calorieContent": 120 //Four large carrots, raw
    },
    "Chanterelle": {
      "name": "Chanterelle",
      "waterContent": 25,
      "calorieContent": 50 //Two cups of chanterelle. These things are worse than kale for calories...
    },
    "Common Mushroom": {
      "name": "Common Mushroom",
      "waterContent": 25,
      "calorieContent": 100 //Two cups of Shiitake, raw
    },
    "Daffodil": {
      "name": "Daffodil",
      "waterContent": 25,
      "calorieContent": 50
    },
    "Dandelion": {
      "name": "Dandelion",
      "waterContent": 25,
      "calorieContent": 60
    },
    "Ginger": {
      "name": "Ginger",
      "waterContent": -250, //IIRC, straight ginger root causes burning sensations on mucous membranes, like the throat, so let's up the demand for water a little....
      "calorieContent": 80 //One cup ginger root, raw
    },
    "Hazelnut": {
      "name": "Hazelnut",
      "waterContent": 0,
      "calorieContent": 425 //Half cup of Hazelnuts. They're also called filberts, lol.
    },
    "Holly": {
      "name": "Holly", //Don't eat Holly, it's poisonous.
      "waterContent": -1500,
      "calorieContent": -1250
    },
    "Leek": {
      "name": "Leek", //Must... Not... Spin...
      "waterContent": 25,
      "calorieContent": 110 //Two leeks, raw
    },
    "Magma Cap": {
      "name": "Magma Cap",
      "waterContent": -1500,
      "calorieContent": 1500 //With all the energy it's absorbed, there's plenty for you to use... Assuming you can quench your newfound thirst.
    },
    "Morel": {
      "name": "Morel",
      "waterContent": 25,
      "calorieContent": 40 //Two cups of morels. And I thought the chanterelles were bad...
    },
    "Purple Mushroom": {
      "name": "Purple Mushroom",
      "waterContent": 25,
      "calorieContent": 750 //Half of magmacap
    },
    "Red Mushroom": {
      "name": "Red Mushroom", //Don't eat this toadstool, unless you want to turn into a tanuki!
      "waterContent": -500,
      "calorieContent": -1000
    },
    "Sap": {
      "name": "Sap", //....Why can we eat this? Why would we want to eat this? At least the mushrooms and holly make since, because 'mistaken identity'. What edible thing are you mistaking tree sap as?
      "waterContent": -200,
      "calorieContent": -100
    },
    "Snow Yam": {
      "name": "Snow Yam",
      "waterContent": 25,
      "calorieContent": 180 //One Large yam, cooked simply
    },
    "Spring Onion": {
      "name": "Spring Onion",
      "waterContent": 25,
      "calorieContent": 500 //Reduced from 700 to 500 - One hundred large scallions, only because this is the "starter" food
    },
    "Field Snack": {
      "name": "Field Snack",
      "waterContent": 10,
      "calorieContent": 700 //Old reliable, easily craftable by the player, worth little and gives a good buff. "starter" food
    },
    "Wild Horseradish": {
      "name": "Wild Horseradish",
      "waterContent": -250, //This is wasabi's crappy tasting cousin, but the spice is still there. Corrected to -250 from -2500
      "calorieContent": 115 //One cup of raw horseradish, about the size of a normal prepared root.
    },
    "Winter Root": {
      "name": "Winter Root",
      "waterContent": 25,
      "calorieContent": 300 //Since Winter Root is a tuber, I just picked a random one. Winged bean tuber it is! Half cup sized tubers.
    },

    // ########################################
    // Animal Drops
    // ########################################

    "Duck Egg": {
      "name": "Duck Egg",
      "waterContent": 50,
      "calorieContent": 80 // A hand full of eggs, its worth 
    },
    "Egg": {
      "name": "Egg",
      "waterContent": 50,
      "calorieContent": 80 //One 'USDA medium' egg
    },
    "Goat Milk": {
      "name": "Goat Milk",
      "waterContent": 470, //16oz ~ 490mL. Did rounding because the numbers don't have to be perfectly accurate.
      "calorieContent": 340 //16oz of goat milk
    },
    "Golden Egg": {
      "name": "Golden Egg",
      "waterContent": 50,
      "calorieContent": 360 //One 'USDA medium' gold flake lined egg
    },
    "L. Goat Milk": {
      "name": "L. Goat Milk",
      "waterContent": 3785, //Description is a gallon of milk; 1 gallon = 3785mL
      "calorieContent": 2700 //It's a gallon of milk, lots of calories.... Plus side, the babs can actually live off milk.
    },
    "Large Egg": {
      "name": "Large Egg",
      "waterContent": 75,
      "calorieContent": 130 //One 'USDA extra-large' egg
    },
    "Large Milk": {
      "name": "Large Milk",
      "waterContent": 3785,
      "calorieContent": 2400
    },
    "Milk": {
      "name": "Milk",
      "waterContent": 470,
      "calorieContent": 300
    },
    "Ostrich Egg": {
      "name": "Ostrich Egg",
      "waterContent": 200,
      "calorieContent": 2000
    },
    "Truffle": {
      "name": "Truffle",
      "waterContent": 25,
      "calorieContent": 70 //One whole, raw truffle. I feel sorry for the poor soul eating this...
    },
    "Void Egg": {
      "name": "Void Egg",
      "waterContent": 50,
      "calorieContent": 360 // One 'USDA jumbo' void egg
    },

    // ########################################
    // Cooking
    // ########################################

    // Will try looking up calorie counts for similar items. The rest will be done by adding ingredient calories and see how it looks. 

    "Algae Soup": {
      "name": "Algae Soup",
      "waterContent": 660,
      "calorieContent": 760
    },
    "Artichoke Dip": {
      "name": "Artichoke Dip",
      "waterContent": 200,
      "calorieContent": 900 //2cups
    },
    "Autumn's Bounty": {
      "name": "Autumn's Bounty", //1 whole extra large pumpkin makes about 36cups of cooked pumpkin. 1 cup is about 100 calories. Assuming not oversized pumpkins, 24 cups of cooked pumpkin seems fine.
      "waterContent": 0,
      "calorieContent": 2580
    },
    "Baked Fish": {
      "name": "Baked Fish",
      "waterContent": 0,
      "calorieContent": 660
    },
    "Banana Pudding": {
      "name": "Banana Pudding",
      "waterContent": 590,
      "calorieContent": 1000 //2cups
    },
    "Bean Hotpot": {
      "name": "Bean Hotpot",
      "waterContent": 0,
      "calorieContent": 600 //4cups
    },
    "Blackberry Cobbler": {
      "name": "Blackberry Cobbler",
      "waterContent": 0,
      "calorieContent": 2500 //About 4cups filling and one cup crust
    },
    "Blueberry Tart": {
      "name": "Blueberry Tart",
      "waterContent": 0,
      "calorieContent": 520 //About 2cups in volume
    },
    "Bread": {
      "name": "Bread",
      "waterContent": 0,
      "calorieContent": 900 //Calories in standard baguette
    },
    "Bruschetta": {
      "name": "Bruschetta",
      "waterContent": 0,
      "calorieContent": 1200 //Big piece, but it uses an entire loaf of bread, so...
    },
    "Cheese Cauliflower": {
      "name": "Cheese Cauliflower",
      "waterContent": "000",
      "calorieContent": 540 //4 cups
    },
    "Chocolate Cake": {
      "name": "Chocolate Cake",
      "waterContent": 250,
      "calorieContent": 28800 //A three tier cake with icing would be about 18 pounds(288oz), according to a baker's website. Have fun filling your pamps.
    },
    "Chowder": {
      "name": "Chowder",
      "waterContent": 150,
      "calorieContent": 640 //4 cups
    },
    "Coleslaw": {
      "name": "Coleslaw",
      "waterContent": 25,
      "calorieContent": 1000 //4 cups
    },
    "Complete Breakfast": {
      "name": "Complete Breakfast",
      "waterContent": 25,
      "calorieContent": 1700
    },
    "Cookie": {
      "name": "Cookie",
      "waterContent": 25,
      "calorieContent": 850 //A dozen cookies, because they're so delicious.
    },
    "Crab Cakes": {
      "name": "Crab Cakes",
      "waterContent": 25,
      "calorieContent": 880 //8 2in wide 3/4inch tall crab cakes.
    },
    "Cranberry Candy": {
      "name": "Cranberry Candy", //This item's sprite looks like juice, and is made with apples, so just using cranberry apple juice as reference
      "waterContent": 470,
      "calorieContent": 320 //16oz
    },
    "Cranberry Sauce": {
      "name": "Cranberry Sauce",
      "waterContent": 25,
      "calorieContent": 880 //2 cups
    },
    "Crispy Bass": {
      "name": "Crispy Bass", //An average bass weighs about five pounds. Roughly 1/3 of the weight of a large fish is good for typical fish meat. That's still a lot of meat to eat in one sitting.
      "waterContent": 25,
      "calorieContent": 1800 //six fillets on each side, about 150calories per bass fillet at that size
    },
    "Dish O' The Sea": {
      "name": "Dish O' The Sea", //Canned or not, sardines are still super salty. Eating a pile of straight sardines sounds painful. At least the hashbrowns don't need any extra salt.
      "waterContent": -750,
      "calorieContent": 750
    },
    "Eggplant Parmesan": {
      "name": "Eggplant Parmesan",
      "waterContent": 75,
      "calorieContent": 1240 //4 cups
    },
    "Escargot": {
      "name": "Escargot",
      "waterContent": 125,
      "calorieContent": 520 //16 normal sized escargot snails; just pretending SDV snails are bigger because magic and meteors. lol.
    },
    "Farmer's Lunch": {
      "name": "Farmer's Lunch",
      "waterContent": 75,
      "calorieContent": 1500
    },
    "Fiddlehead Risotto": {
      "name": "Fiddlehead Risotto",
      "waterContent": 120,
      "calorieContent": 1360 //2 cups
    },
    "Fish Stew": {
      "name": "Fish Stew", //Wait... Fish stew literally contains no fish, only only arthropods and mollusks o.o
      "waterContent": 280,
      "calorieContent": 840 //4 cups
    },
    "Fish Taco": {
      "name": "Fish Taco",
      "waterContent": 120,
      "calorieContent": 1600 //One face sized taco, just to make sure calorie count is greater than ingredient sum
    },
    "Fried Calamari": {
      "name": "Fried Calamari",
      "waterContent": 50,
      "calorieContent": 800 //"4 cups", I assume not packed
    },
    "Fried Eel": {
      "name": "Fried Eel",
      "waterContent": 150,
      "calorieContent": 1300 //4 cups
    },
    "Fried Egg": {
      "name": "Fried Egg",
      "waterContent": 25,
      "calorieContent": 160 //Double eggs, because incetivizing processing
    },
    "Fried Mushroom": {
      "name": "Fried Mushroom",
      "waterContent": 50,
      "calorieContent": 500 //6cups
    },
    "Fruit Salad": {
      "name": "Fruit Salad",
      "waterContent": 100,
      "calorieContent": 880 //8 cups fruit salad; indgredient sum is 770
    },
    "Ginger Ale": {
      "name": "Ginger Ale",
      "waterContent": 470,
      "calorieContent": 160 //16oz
    },
    "Glazed Yams": {
      "name": "Glazed Yams",
      "waterContent": 50,
      "calorieContent": 400 //4cups
    },
    "Hashbrowns": {
      "name": "Hashbrowns",
      "waterContent": 50,
      "calorieContent": 350 //4cups
    },
    "Ice Cream": {
      "name": "Ice Cream",
      "waterContent": 125,
      "calorieContent": 350 //One cone, double scoop
    },
    "Life Elixir": {
      "name": "Life Elixir", //"Restores health to full." ....Then why do some foods restore more health than this?
      "waterContent": 235, //8oz
      "calorieContent": 2000 //Delicious, Nutritious, magic world health potions!
    },
    "Lobster Bisque": {
      "name": "Lobster Bisque",
      "waterContent": 250,
      "calorieContent": 1100 //4 cup
    },
    "Lucky Lunch": {
      "name": "Lucky Lunch", //ngl, this recipe is a little off putting to me... Sea cucumber is really slimy, cooked or not, unless it's way overcooked and tastes terrible.
      "waterContent": 100,
      "calorieContent": 1000 //1 slimy sea cucumber taco
    },
    "Magic Rock Candy": {
      "name": "Magic Rock Candy",
      "waterContent": "000",
      "calorieContent": 2500 //Pure, unadulterated magic rainbow sugar crystals.
    },
    "Maki Roll": {
      "name": "Maki Roll",
      "waterContent": 0,
      "calorieContent": 800 //4 rolls.
    },
    "Mango Sticky Rice": {
      "name": "Mango Sticky Rice",
      "waterContent": 0,
      "calorieContent": 920 //4 cups
    },
    "Maple Bar": {
      "name": "Maple Bar", //Weird name for a maple donut, but okay.
      "waterContent": 0,
      "calorieContent": 600 //One doughnut, apparently
    },
    "Miner's Treat": {
      "name": "Miner's Treat",
      "waterContent": 0,
      "calorieContent": 1000 //Extra large lollipop, just to stay higher than sum of ingredients
    },
    "Oil": {
      "name": "Oil",
      "waterContent": 0,
      "calorieContent": 120 //1 tablespoon. Seriously.
    },
    "Oil of Garlic": {
      "name": "Oil of Garlic",
      "waterContent": 0,
      "calorieContent": 125 //1 tablespoon
    },
    "Omelet": {
      "name": "Omelet", //Can it really be called an omelette without cheese?
      "waterContent": 0,
      "calorieContent": 450 //4 medium egg omelette
    },
    "Pale Broth": {
      "name": "Pale Broth",
      "waterContent": 660,
      "calorieContent": 760 //copy of algae soup
    },
    "Pancakes": {
      "name": "Pancakes",
      "waterContent": 0,
      "calorieContent": 400 //4 4inch pancakes
    },
    "Parsnip Soup": {
      "name": "Parsnip Soup",
      "waterContent": 500,
      "calorieContent": 640 //4 cups of parsnip cream soup
    },
    "Pepper Poppers": {
      "name": "Pepper Poppers",
      "waterContent": 0,
      "calorieContent": 800 //12 poppers
    },
    "Piña Colada": {
      "name": "Piña Colada",
      "waterContent": 235,
      "calorieContent": 420 //8oz
    },
    "Pink Cake": {
      "name": "Pink Cake",
      "waterContent": 0,
      "calorieContent": 1900 //An entire cake. Fewer calories than I expected, tbh.
    },
    "Pizza": {
      "name": "Pizza",
      "waterContent": 0,
      "calorieContent": 1840 //A 12" cheese pizza
    },
    "Plum Pudding": {
      "name": "Plum Pudding",
      "waterContent": 0,
      "calorieContent": 1000 //Apparently Plum Puddings are measured in loafs?
    },
    "Poi": {
      "name": "Poi",
      "waterContent": 300,
      "calorieContent": 1080 //4 cups
    },
    "Poppyseed Muffin": {
      "name": "Poppyseed Muffin",
      "waterContent": 25,
      "calorieContent": 670 //1 muffin
    },
    "Pumpkin Pie": {
      "name": "Pumpkin Pie",
      "waterContent": 50,
      "calorieContent": 2500 //1 pie
    },
    "Pumpkin Soup": {
      "name": "Pumpkin Soup",
      "waterContent": 1250,
      "calorieContent": 870 //8 cups
    },
    "Radish Salad": {
      "name": "Radish Salad",
      "waterContent": 50,
      "calorieContent": 600
    },
    "Red Plate": {
      "name": "Red Plate",
      "waterContent": 150,
      "calorieContent": 600
    },
    "Rhubarb Pie": {
      "name": "Rhubarb Pie",
      "waterContent": 150,
      "calorieContent": 3530 //1 pie. Why is it so much worse than other pies?
    },
    "Rice": {
      "name": "Rice",
      "waterContent": 50,
      "calorieContent": 400 //2 cups cooked white rice
    },
    "Rice Pudding": {
      "name": "Rice Pudding",
      "waterContent": 100,
      "calorieContent": 1200 //4 cups
    },
    "Roasted Hazelnuts": {
      "name": "Roasted Hazelnuts",
      "waterContent": 50,
      "calorieContent": 1440 //1 cup of roasted hazelnuts
    },
    "Roots Platter": {
      "name": "Roots Platter",
      "waterContent": 50,
      "calorieContent": 750
    },
    "Salad": {
      "name": "Salad",
      "waterContent": 50,
      "calorieContent": 600
    },
    "Salmon Dinner": {
      "name": "Salmon Dinner",
      "waterContent": 100,
      "calorieContent": 1400
    },
    "Sashimi": {
      "name": "Sashimi",
      "waterContent": 75,
      "calorieContent": 800
    },
    "Seafoam Pudding": {
      "name": "Seafoam Pudding", //pudding made from fish and squid ink? I love seafood, but even this seems too much...
      "waterContent": 150,
      "calorieContent": 1160 //4 cups of generic pudding 
    },
    "Shrimp Cocktail": {
      "name": "Shrimp Cocktail",
      "waterContent": 150,
      "calorieContent": 550 //Boosted to exceed ingredient sum
    },
    "Spaghetti": {
      "name": "Spaghetti",
      "waterContent": 100,
      "calorieContent": 1200 //4 cups
    },
    "Spicy Eel": {
      "name": "Spicy Eel",
      "waterContent": -250,
      "calorieContent": 1300 //fried eel copy
    },
    "Squid Ink Ravioli": {
      "name": "Squid Ink Ravioli",
      "waterContent": 100,
      "calorieContent": 1200 //4 cups
    },
    "Stir Fry": {
      "name": "Stir Fry",
      "waterContent": 50,
      "calorieContent": 800 //4 cups stirfry veggies on rice
    },
    "Strange Bun": {
      "name": "Strange Bun", //Sea slug and burnt hair mayonaise.... Yum....
      "waterContent": 50,
      "calorieContent": 800
    },
    "Stuffing": {
      "name": "Stuffing",
      "waterContent": 50,
      "calorieContent": 1400 //4 cups
    },
    "Sugar": {
      "name": "Sugar", //Beets UOM is 4 beets per item to get calorie. 1 beet has about 6g sugar, 20 24g per 1 item. Therefore, 8g of sugar per 1 sugar item.
      "waterContent": 0,
      "calorieContent": 35
    },
    "Super Meal": {
      "name": "Super Meal",
      "waterContent": 100,
      "calorieContent": 560 //4 cups 'super foods salad'
    },
    "Survivor Burger": {
      "name": "Survivor Burger",
      "waterContent": 50,
      "calorieContent": 1400 //4 veggie burgers
    },
    "Tom Kha Soup": {
      "name": "Tom Kha Soup",
      "waterContent": 250,
      "calorieContent": 1040 //8 cups
    },
    "Tortilla": {
      "name": "Tortilla",
      "waterContent": 25,
      "calorieContent": 150 //1 large tortilla, what can be made from 1 large ear of corn
    },
    "Triple Shot Espresso": {
      "name": "Triple Shot Espresso",
      "waterContent": 115, //4 oz
      "calorieContent": 0
    },
    "Tropical Curry": {
      "name": "Tropical Curry",
      "waterContent": 240,
      "calorieContent": 960 //4 cups coconut pineapple thai curry
    },
    "Trout Soup": {
      "name": "Trout Soup",
      "waterContent": 240,
      "calorieContent": 800 //4 cups
    },
    "Vegetable Medley": {
      "name": "Vegetable Medley",
      "waterContent": 75,
      "calorieContent": 550
    },
    "Wheat Flour": {
      "name": "Wheat Flour",
      "waterContent": 0,
      "calorieContent": 400 //half cup
    },
    "Cola": {
      "name": "Cola",
      "waterContent": 240,
      "calorieContent": 100
    },
    "Espresso": {
      "name": "Espresso",
      "waterContent": 44,
      "calorieContent": 8
    },
    "Coffee": {
      "name": "Coffee",
      "waterContent": 240,
      "calorieContent": 50
    },
    "Wine": {
      "name": "Wine",
      "waterContent": 148,
      "calorieContent": 123
    },
    "Beer": {
      "name": "Beer",
      "waterContent": 355,
      "calorieContent": 154
    },
    "Tea": {
      "name": "Tea",
      "waterContent": 240,
      "calorieContent": 2
    },
    "Juice": {
      "name": "Juice",
      "waterContent": 240,
      "calorieContent": 114
    }
  },
  // ########################################
  // Types of beds
  // ########################################

  "Bed_Options": {
    "bed": {
      "name": "{{i18n:Bed_Options.Bed.Name}}",
      "description": "{{i18n:Bed_Options.Bed.Description}}",
      "absorbency": 2500.0,
      "containment": 1000.0,
      "spriteIndex": -1,
      "price": 0,
      "washable": true,
      "plural": false,
      "dryingTime": 2400,
      "removable": false,
      "durability": -1
    }
  },

  // ########################################
  // Types of pants
  // ########################################

  "Pants_Options": {
    "blue jeans": {
      "name": "{{i18n:Pants_Options.Blue_Jeans.Name}}",
      "description": "{{i18n:Pants_Options.Blue_Jeans.Description}}",
      "absorbency": 400.0,
      "containment": 600.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    "skirt": {
      "name": "{{i18n:Pants_Options.Skirt.Name}}",
      "description": "{{i18n:Pants_Options.Skirt.Description}}",
      "absorbency": 10.0,
      "containment": 10.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    "toddler pants": {
      "name": "{{i18n:Pants_Options.Toddler_Pants.Name}}",
      "description": "{{i18n:Pants_Options.Toddler_Pants.Description}}",
      "absorbency": 300.0,
      "containment": 450.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    "toddler skirt": {
      "name": "{{i18n:Pants_Options.Toddler_Skirt.Name}}",
      "description": "{{i18n:Pants_Options.Toddler_Skirt.Description}}",
      "absorbency": 10.0,
      "containment": 10.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    "legs": {
      "name": "{{i18n:Pants_Options.Legs.Name}}",
      "description": "{{i18n:Pants_Options.Legs.Description}}",
      "absorbency": 10.0,
      "containment": 10.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": false,
      "durability": -1
    },

    // ##########
    // Spezial pants you can get from npc´s if you are messy
    // ##########

    // stinky pants you get if Abigail changes you
    "stinky pants": {
      "name": "{{i18n:Pants_Options.Stinky_Pants.Name}}",
      "description": "{{i18n:Pants_Options.Stinky_Pants.Description}}",
      "absorbency": 400.0,
      "containment": 600.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    // sams old pants you get if Jodi or sam changes you
    "sams old pants": {
      "name": "{{i18n:Pants_Options.Sams_Old_Pants.Name}}",
      "description": "{{i18n:Pants_Options.Sams_Old_Pants.Description}}",
      "absorbency": 400.0,
      "containment": 600.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    // second hand pants you get if Penny changes you
    "second hand pants": {
      "name": "{{i18n:Pants_Options.Second_Hand_Pants.Name}}",
      "description": "{{i18n:Pants_Options.Second_Hand_Pants.Description}}",
      "absorbency": 400.0,
      "containment": 600.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    // self made pants you get if Emily changes you and you are male
    "self made pants": {
      "name": "{{i18n:Pants_Options.Self_Made_Pants.Name}}",
      "description": "{{i18n:Pants_Options.Self_Made_Pants.Description}}",
      "absorbency": 400.0,
      "containment": 600.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    },
    // self made skirt you get if Emily changes you and you are female
    "self made skirt": {
      "name": "{{i18n:Pants_Options.Self_Made_Skirt.Name}}",
      "description": "{{i18n:Pants_Options.Self_Made_Skirt.Description}}",
      "absorbency": 400.0,
      "containment": 600.0,
      "spriteIndex": -1,
      "price": 2000,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": -1
    }
  },

  // ########################################
  // Types of underwears
  // ########################################

  "Underwear_Options": {
    "black thong": {
      "name": "{{i18n:Underwear_Options.Black_Thong.Name}}",
      "description": "{{i18n:Underwear_Options.Black_Thong.Description}}",
      "absorbency": 75.0,
      "containment": 75.0,
      "spriteIndex": 0,
      "price": 120,
      "washable": false,
      "plural": false,
      "dryingTime": 300,
      "removable": true,
      "durability": 1
    },
    "polka dot panties": {
      "name": "{{i18n:Underwear_Options.Polka_Dot_Panties.Name}}",
      "description": "{{i18n:Underwear_Options.Polka_Dot_Panties.Description}}",
      "absorbency": 120.0,
      "containment": 350.0,
      "spriteIndex": 1,
      "price": 50,
      "washable": true,
      "plural": true,
      "dryingTime": 300,
      "removable": true,
      "durability": 3
    },
    "big kid undies": {
      "name": "{{i18n:Underwear_Options.Big_Kid_Undies.Name}}",
      "description": "{{i18n:Underwear_Options.Big_Kid_Undies.Description}}",
      "absorbency": 120.0,
      "containment": 350.0,
      "spriteIndex": 2,
      "price": 30,
      "washable": true,
      "plural": true,
      "dryingTime": 300,
      "removable": true,
      "durability": 4
    },
    "dinosaur undies": {
      "name": "{{i18n:Underwear_Options.Dinosaur_Undies.Name}}",
      "description": "{{i18n:Underwear_Options.Dinosaur_Undies.Description}}",
      "absorbency": 400.0,
      "containment": 600.0,
      "spriteIndex": 3,
      "price": 45,
      "washable": true,
      "plural": true,
      "dryingTime": 500,
      "removable": true,
      "durability": 8
    },
    "lavender pullups": {
      "name": "{{i18n:Underwear_Options.Lavender_Pullups.Name}}",
      "description": "{{i18n:Underwear_Options.Lavender_Pullups.Description}}",
      "absorbency": 1550.0,
      "containment": 1400.0,
      "spriteIndex": 4,
      "price": 20,
      "washable": false,
      "plural": false,
      "dryingTime": 0,
      "removable": true,
      "durability": 0
    },
    "training pants": {
      "name": "{{i18n:Underwear_Options.Training_Pants.Name}}",
      "description": "{{i18n:Underwear_Options.Training_Pants.Description}}",
      "absorbency": 850.0,
      "containment": 1400.0,
      "spriteIndex": 5,
      "price": 60,
      "washable": true,
      "plural": true,
      "dryingTime": 600,
      "removable": true,
      "durability": 6
    },
    "joja diaper": {
      "name": "{{i18n:Underwear_Options.Joja_Diaper.Name}}",
      "description": "{{i18n:Underwear_Options.Joja_Diaper.Description}}",
      "absorbency": 1800.0,
      "containment": 1400.0,
      "spriteIndex": 6,
      "price": 15,
      "washable": false,
      "plural": false,
      "dryingTime": 0,
      "removable": false,
      "durability": 0
    },
    "baby print diaper": {
      "name": "{{i18n:Underwear_Options.Baby_Print_Diaper.Name}}",
      "description": "{{i18n:Underwear_Options.Baby_Print_Diaper.Description}}",
      "absorbency": 1500.0,
      "containment": 1200.0,
      "spriteIndex": 7,
      "price": 12,
      "washable": false,
      "plural": false,
      "dryingTime": 0,
      "removable": false,
      "durability": 0
    },
    "cloth diaper": {
      "name": "{{i18n:Underwear_Options.Cloth_Diaper.Name}}",
      "description": "{{i18n:Underwear_Options.Cloth_Diaper.Description}}",
      "absorbency": 1400.0,
      "containment": 2600.0,
      "spriteIndex": 8,
      "price": 60,
      "washable": true,
      "plural": false,
      "dryingTime": 1000,
      "removable": false, // washable was redefined as the ability to take it off and wash. Removable controls if you can quickly get out of it (pull-up)
      "durability": 6
    },
    "space diaper": {
      "name": "{{i18n:Underwear_Options.Space_Diaper.Name}}",
      "description": "{{i18n:Underwear_Options.Space_Diaper.Description}}",
      "absorbency": 2700.0,
      "containment": 2800.0,
      "spriteIndex": 9,
      "price": 30,
      "washable": false,
      "plural": false,
      "dryingTime": 0,
      "removable": false,
      "durability": 0
    },
    "pawprint diaper": {
      "name": "{{i18n:Underwear_Options.Pawprint_Diaper.Name}}",
      "description": "{{i18n:Underwear_Options.Pawprint_Diaper.Description}}",
      "absorbency": 2700.0,
      "containment": 2700.0,
      "spriteIndex": 10,
      "price": 35,
      "washable": false,
      "plural": false,
      "dryingTime": 0,
      "removable": false,
      "durability": 0
    },
    "heart diaper": {
      "name": "{{i18n:Underwear_Options.Heart_Diaper.Name}}",
      "description": "{{i18n:Underwear_Options.Heart_Diaper.Description}}",
      "absorbency": 3400.0,
      "containment": 3500.0,
      "spriteIndex": 11,
      "price": 50,
      "washable": false,
      "plural": false,
      "dryingTime": 0,
      "removable": false,
      "durability": 0
    }
  },
  "Debuffs": {
    "Regression.Wet": {
      "name": "{{i18n:Debuffs.Wet.Name}}",
      "type": "{{i18n:Debuffs.Wet.Type}}",
      "description": [
        "{{i18n:Debuffs.Wet.Description.1}}",
        "{{i18n:Debuffs.Wet.Description.2}}",
        "{{i18n:Debuffs.Wet.Description.3}}"
      ]
    },
    "Regression.Messy": {
      "name": "{{i18n:Debuffs.Messy.Name",
      "type": "{{i18n:Debuffs.Messy.Type",
      "description": [
        "{{i18n:Debuffs.Messy.Description.1}}",
        "{{i18n:Debuffs.Messy.Description.1}}",
        "{{i18n:Debuffs.Messy.Description.1}}"
      ]
    }
  },
  "Underwear_States": {
    "wet": {
      "text_description": "wet",
      "text_display_name": "wet"
    },
    "messy": {
      "text_description": "messy",
      "text_display_name": "messy"
    },
    "wet_and_messy": {
      "text_description": "wet and messy",
      "text_display_name": "wet and messy"
    },
    "drying": {
      "text_description": "drying",
      "text_display_name": "drying"
    }
  },

  // message when you passby a npc with dirty underwear

  "Passby": [
    "{{i18n:Passby.1}}"
  ]
}

